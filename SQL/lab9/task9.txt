## 0.1  ####################
пример 1, но с колонкой id

create or alter procedure TASK8_01 (   --GOODSBYAGENT_V2.0
    AGENT type of column AGENT.NAME_AG)
returns (
    ID_GOODS type of column GOODS.ID_GOODS,
    GOODS type of column GOODS.NOMENCLATURE,
    CNT integer)
as
declare variable ID type of column AGENT.ID_AG;
begin
    id = (select a.id_ag
              from agent a
          where a.name_ag=:agent);
    if (id is null) then
        exception error;

    for select g.id_goods, g.nomenclature, count(o.id)
            from operation O
            join goods G
                using(id_goods)
            where O.id_ag = :id
            group by g.id_goods, G.nomenclature
        into :id_goods, :goods, :cnt
    do
        suspend;
end



######## !!!! ######## 
Важно.
по какой-то причине я все процедуры назвал, будто это задание 8,
  так что во вкладке procedures надо искать task8_<номер задания>
в лабах 10, 11 проблема не повторяется
####################### 


## 1  ####################
процедура
по названию поставщика выдать:
  все товары + дата последней поставки (R) для каждого из них
(предположим, спрашиваются 'все товары, с кот-ми работал поставщик')

create or alter procedure TASK8_1 (
    NAME type of column AGENT.NAME_AG)
returns (
    ID_GOODS type of column GOODS.ID_GOODS,
    GOODS_NAME type of column GOODS.NOMENCLATURE,
    LAST_DATE type of column OPERATION.OP_DATE)
as
declare variable ID type of column AGENT.ID_AG;
begin
    id = (select a.id_ag
              from agent a
          where a.name_ag=:name);
    if (id is null) then
    begin
        in autonomous transaction do
            insert into log_file (inform, DDATA)
                values ('в БД нет агента '||:name,
                        CURRENT_DATE);
        exception error ;
    end

    for select g.id_goods, g.nomenclature, max(o.op_date)
            from operation O
            join goods G
                using(id_goods)
            where O.id_ag = :id
                AND O.typeop = 'R'
            group by g.id_goods, G.nomenclature
        into :id_goods, :goods_name, :last_date
    do
        suspend;
end



## 2  ####################
процедура
по паре дат выдать список товаров поставленных в этот период
(две колонки: Приход (A), Расход(R) )

create or alter procedure TASK8_2 (   --goodsintimespan
    date_a type of column OPERATION.OP_DATE,
    date_b type of column OPERATION.OP_DATE
)
returns (
    ID_GOODS type of column GOODS.ID_GOODS,
    GOODS_NAME type of column GOODS.NOMENCLATURE,
    date_of_a varchar(60),
    date_of_r varchar(60)
)
as
begin

    for select distinct(o.id_goods), g.nomenclature, T1.dates, T2.dates
            from (select id_goods, list (o2.op_date, ', ')
                     from operation o2
                  where o2.typeop = 'A'
                      and o2.op_date BETWEEN :date_a and :date_b
                  group by id_goods) as T1 (id_goods, dates)
            full join (select id_goods, list (o2.op_date, ', ')
                     from operation o2
                  where o2.typeop = 'R'
                      and o2.op_date BETWEEN :date_a and :date_b
                  group by id_goods) as T2 (id_goods, dates)
                 using (id_goods)
            left join operation o
                using (id_goods)
            left join goods g
                using (id_goods)
            --where o.op_date BETWEEN :date_a and :date_b

        into :id_goods, :goods_name, :date_of_a, :date_of_r
    do
        suspend;
end



## 3  ####################
процедура
название склада + период
  => оборот за указанный период 

create or alter procedure TASK8_3 (
    NAME type of column WAREHOUSE.NAME,
    DATE_A type of column OPERATION.OP_DATE,
    DATE_B type of column OPERATION.OP_DATE)
returns (
    ID_GOODS type of column GOODS.ID_GOODS,
    GOODS_NAME type of column GOODS.NOMENCLATURE,
    DATE_OF_A varchar(60),
    DATE_OF_R varchar(60))
as
declare variable ID type of column WAREHOUSE.ID_WH;
begin
    id = (select w.id_wh
              from warehouse w
          where w.name=:name);

    if (id is null) then
    begin
        in autonomous transaction do
            insert into log_file (inform, DDATA)
                values ('нету скалада '||:name,
                        CURRENT_DATE);
        exception error ;
    end

    for select distinct(o.id_goods), g.nomenclature, T1.dates, T2.dates
            from (select id_goods, list (o2.op_date, ', ')
                     from operation o2
                  where o2.typeop = 'A'
                     and o2.id_wh = :id
                     and o2.op_date BETWEEN :date_a and :date_b
                  group by id_goods) as T1 (id_goods, dates)
            full join (select id_goods, list (o2.op_date, ', ')
                     from operation o2
                  where o2.typeop = 'R'
                     and o2.id_wh = :id
                     and o2.op_date BETWEEN :date_a and :date_b
                  group by id_goods) as T2 (id_goods, dates)
                 using (id_goods)
            left join operation o
                using (id_goods)
            left join goods g
                using (id_goods)
            --where o.op_date BETWEEN :date_a and :date_b

        into :id_goods, :goods_name, :date_of_a, :date_of_r
    do
        suspend;
end
 


## 4  ####################
указан товар + кол-во
  => на каких складах его меньше
(если товара нет, то бишь его кол-во = 0, то
  предполагаю, его так же меньше указанного кол-ва)

create or alter procedure TASK8_4 (  --whwithlessquantity
    NAME type of column GOODS.NOMENCLATURE,
    AMOUNT type of column GOODS_WH.QUANTITY)
returns (
    ID_WH type of column WAREHOUSE.ID_WH,
    WH_NAME type of column WAREHOUSE.NAME)
as
declare variable ID type of column GOODS.ID_GOODS;
begin
    id = (select g.id_goods
              from goods g
          where g.nomenclature=:name);

    if (id is null) then
    begin
        in autonomous transaction do
            insert into log_file (inform, DDATA)
                values ('нету товара '||:name,
                        CURRENT_DATE);
        exception error ;
    end
    if (:amount <= 0) then
    begin
        in autonomous transaction do
            insert into log_file (inform, DDATA)
                values ('некорректное кол-во: '||:amount,
                        CURRENT_DATE);
        exception error ;
    end


    for     select distinct(id_wh), name
                from warehouse
                left join goods_wh
                    using(id_wh)
                where id_wh not in (select gw.id_wh
                                    from goods_wh gw
                                where gw.id_goods=:id)
                    or quantity <= :amount
        into :id_wh, :wh_name
    do
        suspend;

end



## 5  ####################
процедура,
заданый товар + нек значение
  => поставщики, у кот-ых объём поставок < 

create or alter procedure TASK8_5 (  --agswithlesssumquantity
    NAME type of column GOODS.NOMENCLATURE,
    AMOUNT type of column OPERATION.QUANTITY)
returns (
    ID_AG type of column AGENT.ID_AG,
    AG_NAME type of column AGENT.NAME_AG)
as
declare variable ID type of column GOODS.ID_GOODS;
begin
    id = (select g.id_goods
              from goods g
          where g.nomenclature=:name);

    if (id is null) then
    begin
        in autonomous transaction do
            insert into log_file (inform, DDATA)
                values ('нету товара '||:name,
                        CURRENT_DATE);
        exception error ;
    end
    if (:amount <= 0) then
    begin
        in autonomous transaction do
            insert into log_file (inform, DDATA)
                values ('некорректное кол-во: '||:amount,
                        CURRENT_DATE);
        exception error ;
    end


    for     select id_ag, sum(quantity) as all_am
                    from operation
                    join agent
                        using (id_ag)
                where id_goods = :id
                group by id_ag, id_goods
                having sum(quantity) < :amount
            union all
            select distinct(id_ag), 0
                    from operation
                    right join agent
                        using (id_ag)
                where id_ag not in (select o2.id_ag
                                        from operation o2
                                    where id_goods = :id)
        into :id_ag, :ag_name
    do
        suspend;

end



## 6  ####################
процедура, 
название таблицы (TNAME) + столбца (ST_NAME)
  => кол-во ненулл записей зад. столбца зад. таблицы

create or alter procedure TASK8_6 (  --notnullrowsofselectedtable
    T_NAME char(31),
    COL_NAME char(31)
)
returns (
    KOL integer
)
as
declare variable OPER varchar(200);
begin
    OPER = 'select count('|| col_name || ') from ' || t_name;

    execute statement OPER
        into :KOL ;

    suspend;
end



## 7  ####################
процедура, 
название таблицы (TNAME) + 2-х столбцов (ST1_NAME, ST2_NAME)
  => информация из таблицы, сгруппированная по ST1_NAME
       с указанием минимального и максимального значений в ST2_NAME

что нужно засунуть в строку:
select cast( id_wh as varchar(30) ),
                CAST( max(quantity) as varchar(30) ),
                CAST( min(quantity) as varchar(30) )
            from operation
            group by id_wh


create or alter procedure TASK8_7 (
    T_NAME char(31),
    COL_NAME_1 char(31),
    COL_NAME_2 char(31))
returns (
    RET_COL_1 varchar(30),
    RET_COL_2 varchar(30),
    RET_COL_3 varchar(30))
as
declare variable OPER varchar(300);
begin
    OPER = 'select cast( ' ||col_name_1|| ' as varchar(30) ), ' ||
                'CAST( min(' ||col_name_2|| ') as varchar(30) ), ' ||
                'CAST( max(' ||col_name_2|| ') as varchar(30) ) ' ||
            'from ' ||t_name|| ' ' ||
            'group by ' || col_name_1 ;

    --insert into log_file (inform)
     --   values(:oper);
    --suspend;
    for     execute statement OPER
        into :ret_col_1, :ret_col_2, :ret_col_3
    do
        suspend;

end



## 8  ####################
процедура, 
город
  => название постовщиков города + 
       диапозон дат операций поставщика

create or alter procedure TASK8_8 (
    TOWN_NAME type of column AGENT.TOWN
)
returns (
    ID_AG type of column AGENT.ID_AG,
    AG_NAME type of column AGENT.NAME_AG,
    TIME_PER varchar(30)
)
as
declare variable TN type of column AGENT.TOWN;
begin

    if (not exists (select 1
                      from agent a
                  where a.town=:town_name)) then
    begin
        in autonomous transaction do
            insert into log_file (inform, DDATA)
                values ('нету города '||:town_name,
                        CURRENT_DATE);
        exception error ;
    end

    for select a.id_ag, a.name_ag,
                        coalesce(min(o.op_date)||' - '||max(o.op_date), ' ') as D
                    from operation o
                    right join agent a
                        using(id_ag)
                where a.town = :town_name
                group by a.id_ag, a.name_ag
        into :id_ag, :ag_name, :time_per
    do
        suspend;

end













create or alter procedure CR4_1 ( --pricebywhname
    NAME type of column WAREHOUSE.NAME)
as
declare variable ID type of column GOODS.ID_GOODS;
begin
    id = (select w.id_wh
              from warehouse w
          where w.name=:name);
    if (id is null) then
    begin
        in autonomous transaction do
            insert into log_file (inform, DDATA)
                values ('в БД нету склада '||:name,
                        CURRENT_DATE);  --я хотел время, но у него формат другой
        exception error ;
    end

    insert into log_file (inform)
            values ((select price
                            from operation
                        where id_wh = :id
                            and typeop = 'A'
                            and op_date >= all (select o2.op_date
                                                    from operation o2
                                                where o2.id_wh = :id
                                                    and o2.typeop = 'A'))
            );

    suspend;
end


#####

execute procedure
    cr4_1('Склад 1')



create or alter procedure CR4_2 ( --pricebywhname
    NAME type of column AGENT.name_ag,
    PERCENT numeric(2),
    optype type of column OPERATION.TYPEOP)
as
declare variable ID type of column GOODS.ID_GOODS;
begin
    id = (select a.id_ag
              from agent a
          where a.name_ag=:name);
    if (id is null) then
    begin
        in autonomous transaction do
            insert into log_file (inform, DDATA)
                values ('в БД нету агента '||:name,
                        CURRENT_DATE);  --я хотел время, но у него формат другой
        exception error ;
    end

    update operation
    set price = price * :percent
    where id_ag = :id and typeop = :optype;

    suspend;
end


####

execute procedure
    cr4_2('Надежный', 1.5, 'A')














