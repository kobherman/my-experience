#1  ####################
SELECT LOCATION, SUM(BUDGET) AS TOTAL_BUDGET
        FROM DEPARTMENT
    GROUP BY LOCATION

для каждого города, где есть фирма,
  написать суммарный бюджет



#2  ####################
SELECT PROJ_ID, SUM (PROJECTED_BUDGET) AS TOTAL_BUDGET
        FROM PROJ_DEPT_BUDGET
    WHERE FISCAL_YEAR=1994
    GROUP BY PROJ_ID;

суммарный бюджет каждого проекта в 1994 оду



#   ####################
Агрегатный функции - SUM(), MIN(), MAX(), AVG()
аргументом могут быть столбец или выражение,
  содержащее столбец, не являющийся эл-ом группировки

SUM, AVG - тока к столбцам с числ данными
MIN, MAX - ещё типа даты-время

null - Игнорируется (!)


Агреганая ф-ия LIST() строит из значения поля-параметра
  функции список. может исп. для проверки или передачи набора знач. в виде списка
#   ####################



#3  ####################
SELECT PROJ_ID,
        AVG (PROJECTED_BUDGET) AS TOTAL_BUDGET,
        COUNT (DEPT_NO) AS NUM_DEPARTMENTS
            FROM PROJ_DEPT_BUDGET
    WHERE FISCAL_YEAR=1995
    GROUP BY PROJ_ID;

средний бюджет каждого проекта в 1995 году
  + кол-во участв. отделов


SELECT PROJ_ID,
        AVG (PROJECTED_BUDGET) AS TOTAL_BUDGET,
        COUNT (DEPT_NO) AS NUM_DEPARTMENTS
        LIST (DEPT_NO) AS LIST_DEPT
            FROM PROJ_DEPT_BUDGET
    WHERE FISCAL_YEAR=1995
    GROUP BY PROJ_ID;

для проверки можно вывести список отделов в каждой группе



#   ####################
В запросах с группировкой COUNT() - тоже агрегирующая ф.

COUNT(*) - кол-во записей в группе
COUNT(COL_NAME), где COL_NAME не колонка из группирущих, - 
  кол-во непустых знач. в столбце для кажд из групп
COUNT(DISTINCT COL_NAME) - как второе, не считая повторов
#   ####################



#4  ####################
SELECT JOB_CODE, COUNT (DISTINCT JOB_COUNTRY) as N_dist, COUNT (JOB_COUNTRY) as N_total
        FROM JOB
    GROUP BY JOB_CODE;

для каждого кода работы - во скоких страннах он есть



#5  ####################
SELECT DP.HEAD_DEPT, COUNT(*)
        FROM DEPARTMENT DP
    GROUP BY DP.HEAD_DEPT;

скока отделений пдчиняется каждому отделу



#6  ####################
SELECT LOCATION,
        COUNT(*),
        COUNT(HEAD_DEPT),
        COUNT(DISTINCT HEAD_DEPT)
            FROM DEPARTMENT
    GROUP BY LOCATION

для каждого города опред: кол-во отделений фирмы в этом городе;
  кол-во отделений, у которых есть вышестоящее отделение;
  кол-во вышест. отделений



#   ####################
Можно условие После группировки - HAVING

условие проверяется После формирования групп
рекомендуется, если условие - агригатная функция
#   ####################



#7  ####################
SELECT PROJ_ID, SUM (PROJECTED_BUDGET) AS TOTAL_BUDGET
        FROM PROJ_DEPT_BUDGET
    WHERE FISCAL_YEAR=1994
    GROUP BY PROJ_ID
    HAVING SUM (PROJECTED_BUDGET)>100000;

коды проектов с сум бюдж. в 1994 г. > 100,000



#   ####################
условие группировки может содержать вычисляемое выражение
чтобы не повторять выражение в списке SELECT и GROUP BY можно использвать псевдоним
#   ####################



#8  ####################
SELECT EXTRACT(YEAR FROM E.HIRE_DATE) AS YH, COUNT(*)
        FROM EMPLOYEE E
    GROUP BY YH

для каждого года скока приняли сотрудников



#   ####################
Список группировки может содержать любое количество элементов
группировки.
#   ####################



#9  ####################
SELECT E.DEPT_NO,
    EXTRACT(YEAR FROM E.HIRE_DATE) AS YH,
    COUNT(*)
        FROM EMPLOYEE E
    GROUP BY E.DEPT_NO, YH

для каждого отдела и каждого года - кол-во принятых сотрудников








