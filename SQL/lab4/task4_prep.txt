#   ####################
Outer join

исп в SELECT для неннормализованной таблицы - 
		столбцы из разных таблиц
мн-во таких столбцов - Поток

для соединения неск строк из разных таблиц в одну строку - 
		исп. условия
Внутрение условия:
  2 потока -> 1 : отбрасывает не прошедшие условию строки
Внешние условия:
  2 потока -> 1 : выбирает строки, даже если в нек. случ. не
                    найдено соотв
Отсутствующие данные - NULL

во внешнем соединении различают: левую и правую таблицы
  => различают Левое, Правое и Полное внешнее соединение

можно в принципе и таблица сама с собой


полный синтаксис
	FROM <таблица> [<алиас>]{[INNER]|{LEFT|RIGHT|FULL}[OUTER] } JOIN
	     <таблица> [<алиас>]{[ON <условие соединения>[<соединение>]

нет вида => внутреннее.
есть вид => можно не указ, что внешнее

!!!
открытое соединенние требуется в задачах, где необходимо, чтобы данные 
  какой-то таблицы присутствовали все
#   ####################



#1  ####################
SELECT DEPARTMENT, FULL_NAME
        FROM DEPARTMENT A LEFT JOIN
        EMPLOYEE B ON A.MNGR_NO =B.EMP_NO;

или помен. местами таблицы в опер. соединения

SELECT DEPARTMENT, FULL_NAME
        FROM EMPLOYEE A RIGHT JOIN
        DEPARTMENT B ON A.EMP_NO=B.MNGR_NO;

список Всех отделов + полные имена управл. (менеджеров)
(в лаб №3 - получили тока где есть менеджеры)
чтобы получить где нету менеджеров, исп. открытое соединение

т.к. DEPARTMENT уч. во внешн соединении, в рез попадут
  строки со Всеми отделами, но где нету менеджера,
  в строке будет NULL



#2  ####################
SELECT A.DEPARTMENT, B.DEPARTMENT AS HEAD_DEPT
        FROM DEPARTMENT A LEFT
        JOIN DEPARTMENT B
            ON A.HEAD_DEPT=B.DEPT_NO;

Все отделения фирмы + вышест. отдел, если есть



#3  ####################
SELECT A.FULL_NAME, COUNT(PO_NUMBER) AS COUNT_SALES
        FROM EMPLOYEE A LEFT
        JOIN SALES B
            ON A.EMP_NO=B.SALES_REP
    GROUP BY A.FULL_NAME;

для Каждого сотрудника - посчитать скока заказов оформил
(в группировке можно и  A.EMP_NO, если есть тёзки)



#4  ####################
SELECT P.PROJ_NAME, A.FULL_NAME, D.DEPARTMENT
        FROM PROJECT P
        LEFT JOIN EMPLOYEE A
            ON P.TEAM_LEADER=A.EMP_NO
        LEFT JOIN DEPARTMENT D
            USING(DEPT_NO);


для Каждого проекта - название отдела руководителя проекта
!т.к. первая операция - вненшняя, то и след соединение - открытое!

можно другой  порядок, чтобы не делать второе открытым:
SELECT P.PROJ_NAME, A.FULL_NAME, D.DEPARTMENT
        FROM EMPLOYEE A
        JOIN DEPARTMENT D
            USING(DEPT_NO)
        RIGHT JOIN PROJECT P
            ON P.TEAM_LEADER=A.EMP_NO



=============================================================================================
=============================================================================================
#   ####################
Union

исп для объединение 2 или более операторов SELECT,
  рез-ты должны быть совместимы.
для каждого SELECT, передающего выходной поток UNION,
  спецификация должна содержать список одинаковых столбцов
  (кол-во + порядок + типы соотв столбцоы должны совпадать)

дубли строк убираются автоматически,
но если надо, то
  UNION ALL
#   ####################



#5  ####################
SELECT JOB_COUNTRY
        FROM JOB
UNION
SELECT COUNTRY
        FROM CUSTOMER;

полный список стран, вовлечённых в деятельность фирмы



#6  ####################
SELECT FULL_NAME,'MANAGER' AS TITLE
        FROM EMPLOYEE E
        JOIN DEPARTMENT D
            ON E.EMP_NO=D.MNGR_NO
UNION
SELECT FULL_NAME,'TEAM_LEADER'
        FROM EMPLOYEE F
        JOIN PROJECT P
            ON F.EMP_NO=P.TEAM_LEADER


список Всех менеджеров отделов + Всех руководителей проектов


















