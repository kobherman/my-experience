## 1  ####################
процедура:
поставщик
  => товары, им поставленные (R) + дата последней поставки
(исп. явный курсор)

create or alter procedure TASK10_1 (  --agsgoodswdate
    NAME type of column AGENT.NAME_AG
)
returns (
    id_goods type of column goods.id_goods,
    nomen type of column goods.nomenclature,
    latest_date type of column operation.op_date)
as
declare variable ID type of column AGENT.ID_AG;
declare C_GD cursor for (select id_goods, nomenclature as nc, max(op_date) as mx
                                from operation
                                join goods
                                    using(id_goods)
                            where id_ag = :id
                                and typeop='R'
                            group by id_goods,nomenclature);
begin
    id = (select a.id_ag
              from agent a
          where a.name_ag=:name);
    if (id is null) then
    begin
        in autonomous transaction do
            insert into log_file (inform, DDATA)
                values ('в БД нет агента '||:name,
                        CURRENT_DATE);
        exception error ;
    end

    open C_GD; -- курсор нужно явно открыть
    while (1=1) do
    begin
        fetch C_GD into :id_goods, :nomen, :latest_date;--извлечь строку по курсору
        if (row_count=0) then
            leave;--строк нет
        suspend;
    end
    close C_GD;--закрыть курсор

end



## 2  ####################
процедура:
пара дат
  => таблица товаров + в две колоки приход/расход
(исп. явный курсор)

create or alter procedure TASK10_2 (  --goodsindates
    date_a type of column OPERATION.OP_DATE,
    date_b type of column OPERATION.OP_DATE
)
returns (
    ID_GOODS type of column GOODS.ID_GOODS,
    NOMEN type of column GOODS.NOMENCLATURE,
    date_of_a varchar(50),
    date_of_r varchar(50)
)
as
declare variable ID type of column AGENT.ID_AG;
declare C_GinD cursor for (
    select distinct(o.id_goods), g.nomenclature, T1.dates as d1, T2.dates as d2
            from (select id_goods, list (o2.op_date, ', ')
                     from operation o2
                  where o2.typeop = 'A'
                      and o2.op_date BETWEEN :date_a and :date_b
                  group by id_goods) as T1 (id_goods, dates)
            full join (select id_goods, list (o2.op_date, ', ')
                     from operation o2
                  where o2.typeop = 'R'
                      and o2.op_date BETWEEN :date_a and :date_b
                  group by id_goods) as T2 (id_goods, dates)
                 using (id_goods)
            left join operation o
                using (id_goods)
            left join goods g
                using (id_goods)
    );
begin

    open C_GinD; -- курсор нужно явно открыть
    while (1=1) do
    begin
        fetch C_GinD into :id_goods, :nomen, :date_of_a,:date_of_r;--извлечь строку по курсору
        if (row_count=0) then
            leave;--строк нет
        suspend;
    end
    close C_GinD;--закрыть курсор

end



## 3  ####################
процедура:
год
  =>увеличить стоимость каждой 3-ей операции на 10%
(исп. неявный курсор)

create or alter procedure TASK10_3 (  --raisevery3rdprice
    yr integer
    )
as
declare variable I integer = 1;
begin

    for     select id, price, op_date
                from operation
            where extract(year from op_date)=:yr
    as cursor CRN do
    begin
        if (mod(i,3) = 0) then
            update operation
                set price = price * 1.1
                where current of CRN;

        insert into log_file(inform, ddata)
            values ('price, '||:i, CRN.op_date);

        i=i+1;
    end
end
 


## 4  ####################
процедура:
период времени
  =>промежуточные итоги по каждому товару с операциям
      (не лефт джойн)
вид:
  название товара, дата операции, тип операции, кол-во,
  промежуточный итог = итог за пред.дату +(-) кол-во

create or alter procedure TASK10_4 (
    DATE_A type of column OPERATION.OP_DATE,
    DATE_B type of column OPERATION.OP_DATE)
returns (
    ID_GOODS type of column GOODS.ID_GOODS,
    NOMEN type of column GOODS.NOMENCLATURE,
    OP_DATE type of column OPERATION.OP_DATE,
    TYPE_OF_OP type of column OPERATION.TYPEOP,
    QUANTITY type of column OPERATION.QUANTITY,
    PROM_ITOG type of column OPERATION.QUANTITY)
as
declare variable LAST_GOODS type of column OPERATION.ID_GOODS;
declare variable TEMP_ITOG type of column OPERATION.QUANTITY;
declare variable op_sign integer;
declare C_GIND cursor for (
    select ID_GOODS, NOMENCLATURE, OP_DATE, TYPEOP, QUANTITY, 0 as T
    from OPERATION
    join GOODS using (ID_GOODS)
    where OP_DATE between :DATE_A and :DATE_B
    order by id_goods, op_date);
begin
    last_goods = null;
    --temp_itog = 0.0;

    open C_GinD; -- курсор нужно явно открыть
    while (1=1) do
    begin
        fetch C_GinD into :id_goods, :nomen,
            :op_date, :type_of_op, :quantity, :prom_itog;--извлечь строку по курсору

        if (row_count=0) then
            leave;--строк нет


        if (C_GinD.typeop = 'A') then
            op_sign = 1;
        else
            op_sign = -1;

        if ( (last_goods is null) or (last_goods <> C_GinD.id_goods)) then
        begin
            last_goods = C_GinD.id_goods;
            temp_itog = 0.0;
        end

        :prom_itog = temp_itog + op_sign*:quantity;
        temp_itog = :prom_itog;

        suspend;
    end
    close C_GinD;--закрыть курсор

end






















