#   ####################

#   ####################


#1  ####################
create or alter procedure EMPTY_PROCEDURE (
    ID type of column GOODS.ID_GOODS,
    NAME type of column GOODS.NOMENCLATURE,
    MEAS type of column GOODS.MEASURE)
as
begin
  /* Procedure Text */
  insert into goods
        (id_goods, nomenclature, measure)
        values (:id, :name, :meas);

  suspend;
end

процедура, чтобы вставить в GOODS

чтобы неоплашать с типом данных копируем его из
  соотв. колонок



#2  ####################
create or alter procedure REST_INSERT (
    GOODS type of column GOODS.NOMENCLATURE,
    WH type of column WAREHOUSE.NAME,
    Q type of column GOODS_WH.QUANTITY)
as
declare variable IDG type of column GOODS.ID_GOODS;
declare variable IDW type of column WAREHOUSE.ID_WH;
begin
    /* Procedure Text */
    idg = (select A.id_goods
               from goods A
           where A.nomenclature = :goods);
    if (idg is null ) then
        begin
        insert into log_file (inform)
            values ('ошибка в названии товара: '||:goods);
        exit;
        end

    idw = (select W.id_wh
               from warehouse W
           where W.name=:wh);
    if (idw is null ) then
        begin
        insert into log_file (inform)
            values ('ошибка в названии склада: '||:wh);
        exit;
        end

    if (:q<0) then
        begin
        insert into log_file (inform)
            values ('недопустимое значение остатка: '||:q);
        exit;
        end

    insert into goods_wh
        values (null, :idw, :idg, :q);
    insert into log_file (inform)
        values ('остаток добавлен');
    suspend;
end 

написать процедуру добавления остатка на склад
параметры проц:
  название товара, название склада, кол-во
в значениях парам мб ошибки
  => процедура не должна заверш. аварийно,
     но сообщените в таблицу LOG_FILE


если бы не надо было проверять:

create or alter procedure REST1 (
    GOODS type of column GOODS.NOMENCLATURE,
    WH type of column WAREHOUSE.NAME,
    Q type of column GOODS_WH.QUANTITY)
as
begin
    /* Procedure Text */
    insert into goods_wh
        values (null,
            (select id_wh
                from warehouse W
             where W.name=:wh),
            (select A.id_goods
                 from goods A
             where A.nomenclature = :goods),
             :q);
    insert into log_file (inform)
        values ('остаток добавлен');
end



#   ####################
Внимание!!!

#   ####################



#3  ####################
create or alter procedure REPORT_ON_WH (
    WH type of column WAREHOUSE.NAME)
as
declare variable CNT integer;
declare variable FULL_QT type of column GOODS_WH.QUANTITY;
begin
/* Procedure Text */
    select count(distinct A.ID_GOODS), sum(A.QUANTITY)
            from GOODS_WH A
            join WAREHOUSE B
                using (ID_WH)
    where B.NAME = :WH
    into :CNT, :FULL_QT;

    insert into log_file (inform)
        values (' типов товара '||:cnt||'; всего товаров '||:full_qt);
    suspend;
end

для заданного скалада определить кол-во разных наименований
  + общее кол-во товаров на нём
(имя скалада - правильно задаётся)
полученые данные -> LOG_FILE



#4  ####################
create or alter procedure MAX_QT
as
    declare variable GOODS type of column GOODS.NOMENCLATURE;
begin
/* Procedure Text */
    for select G.nomenclature
            from operation O
            join goods G
                using(id_goods)
            where O.quantity = (select max(A.quantity)
                                    from operation A)
        into :goods
    do
        insert into log_file(inform)
            values(:goods);
end

процедура, наход. товары, которые поставлялись в макс кол-ве
  (операция мб и A, и R)
записать их в LOG_FILE

или, если решим, что список не будет супер большим, то можно:

create or alter procedure MAX_QT1
as
declare variable LIST_NOMEN varchar(200);
begin
    /* Procedure Text */
    select list( ' '||TRIM(G.nomenclature) )
            from operation O
            join goods G
                using(id_goods)
        where O.quantity = (select max(A.quantity)
                                from operation A)
    into :list_nomen ;

    insert into log_file(inform)
        values(:list_nomen);
    suspend;
end





























